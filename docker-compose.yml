version: '3.9'
services:

  # OpenTelemetry Collector
  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.70.0
    container_name: grey-app-otel-collector
    command: --config=/etc/otel-collector-config.yaml
    volumes:
      - ./pkg/otel/confs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4617:4317" # OTLP over http receiver
      - "9565:9464" # Prometheus exporter
      - "9999:8888"
    depends_on:
      - jaeger
      - prometheus
    networks:
      - grey_net

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.41.0
    container_name: grey-app-jaeger
    ports:
      - "14260:14250" # Collector http
      - "16696:16686" # Web HTTP
    networks:
      - grey_net
  
  prometheus:
    image: prom/prometheus:v2.45.0
    command:
        - --config.file=/etc/prometheus/prometheus-config.yaml
    volumes:
        - ./pkg/otel/confs/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    ports:
        - "2020:9090"
    networks:
        - grey_net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "7550:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./pkg/otel/confs/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grey-grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
        - grey_net

  db:
    image: postgres:16
    container_name: grey-app-db-container
    volumes:
      - grey-db-data:/var/lib/postgresql
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - grey_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d grey-app-db -U db_user" ]
      interval: 5s
      timeout: 5s
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grey-wallet-backend-app
    ports:
      - "${APP_PORT}:9191"
      - "1111:6060"
    networks:
      - grey_net
    environment:
      - MY_ENV=${MY_ENV}
    depends_on:
      db:
        condition: service_healthy

networks:
  grey_net:

volumes:
  grey-db-data:
  grey-cache:
  grey-grafana-data: